pipeline:
  name: SCC GenAI Demo
  identifier: SCC_GenAI_Demo
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: githubconnectorpersonal
        repoName: scc-preventive-demo
        build: <+input>
  stages:
    - stage:
        name: Preventive Workflow
        identifier: Checkout
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: kubernetesclusterscc
              namespace: harness-delegate-ng
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: Run
                  name: List all files
                  identifier: List_all_files
                  spec:
                    connectorRef: account.harnessImage
                    image: hashicorp/terraform
                    shell: Sh
                    command: ls -al
              - step:
                  type: Run
                  name: terraform init
                  identifier: terraform_init
                  spec:
                    connectorRef: account.harnessImage
                    image: hashicorp/terraform
                    shell: Sh
                    command: terraform init
              - step:
                  type: Run
                  name: terraform plan
                  identifier: terraform_plan
                  spec:
                    connectorRef: account.harnessImage
                    image: hashicorp/terraform
                    shell: Sh
                    command: |-
                      terraform plan -out=main-plan
                      terraform show -json main-plan > plan.json
                      cat plan.json
          caching:
            enabled: false
            paths: []
